// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Models/Analyzer/Proto/AffixRange.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tradie.Analyzer.Proto {

  /// <summary>Holder for reflection information generated from Models/Analyzer/Proto/AffixRange.proto</summary>
  public static partial class AffixRangeReflection {

    #region Descriptor
    /// <summary>File descriptor for Models/Analyzer/Proto/AffixRange.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AffixRangeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZNb2RlbHMvQW5hbHl6ZXIvUHJvdG8vQWZmaXhSYW5nZS5wcm90byJuCgpB",
            "ZmZpeFJhbmdlEhMKB21vZEhhc2gYASABKANCAjABEhAKCG1pblZhbHVlGAIg",
            "ASgCEhAKCG1heFZhbHVlGAMgASgCEhIKCmVudGl0eUtpbmQYBCABKAUSEwoL",
            "bW9kQ2F0ZWdvcnkYBSABKAVCGKoCFVRyYWRpZS5BbmFseXplci5Qcm90b2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tradie.Analyzer.Proto.AffixRange), global::Tradie.Analyzer.Proto.AffixRange.Parser, new[]{ "ModHash", "MinValue", "MaxValue", "EntityKind", "ModCategory" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AffixRange : pb::IMessage<AffixRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AffixRange> _parser = new pb::MessageParser<AffixRange>(() => new AffixRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AffixRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tradie.Analyzer.Proto.AffixRangeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AffixRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AffixRange(AffixRange other) : this() {
      modHash_ = other.modHash_;
      minValue_ = other.minValue_;
      maxValue_ = other.maxValue_;
      entityKind_ = other.entityKind_;
      modCategory_ = other.modCategory_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AffixRange Clone() {
      return new AffixRange(this);
    }

    /// <summary>Field number for the "modHash" field.</summary>
    public const int ModHashFieldNumber = 1;
    private long modHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ModHash {
      get { return modHash_; }
      set {
        modHash_ = value;
      }
    }

    /// <summary>Field number for the "minValue" field.</summary>
    public const int MinValueFieldNumber = 2;
    private float minValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinValue {
      get { return minValue_; }
      set {
        minValue_ = value;
      }
    }

    /// <summary>Field number for the "maxValue" field.</summary>
    public const int MaxValueFieldNumber = 3;
    private float maxValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxValue {
      get { return maxValue_; }
      set {
        maxValue_ = value;
      }
    }

    /// <summary>Field number for the "entityKind" field.</summary>
    public const int EntityKindFieldNumber = 4;
    private int entityKind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EntityKind {
      get { return entityKind_; }
      set {
        entityKind_ = value;
      }
    }

    /// <summary>Field number for the "modCategory" field.</summary>
    public const int ModCategoryFieldNumber = 5;
    private int modCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModCategory {
      get { return modCategory_; }
      set {
        modCategory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AffixRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AffixRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModHash != other.ModHash) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinValue, other.MinValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxValue, other.MaxValue)) return false;
      if (EntityKind != other.EntityKind) return false;
      if (ModCategory != other.ModCategory) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ModHash != 0L) hash ^= ModHash.GetHashCode();
      if (MinValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinValue);
      if (MaxValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxValue);
      if (EntityKind != 0) hash ^= EntityKind.GetHashCode();
      if (ModCategory != 0) hash ^= ModCategory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModHash != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ModHash);
      }
      if (MinValue != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(MinValue);
      }
      if (MaxValue != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MaxValue);
      }
      if (EntityKind != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EntityKind);
      }
      if (ModCategory != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModCategory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModHash != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ModHash);
      }
      if (MinValue != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(MinValue);
      }
      if (MaxValue != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MaxValue);
      }
      if (EntityKind != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EntityKind);
      }
      if (ModCategory != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ModCategory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ModHash != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ModHash);
      }
      if (MinValue != 0F) {
        size += 1 + 4;
      }
      if (MaxValue != 0F) {
        size += 1 + 4;
      }
      if (EntityKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityKind);
      }
      if (ModCategory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModCategory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AffixRange other) {
      if (other == null) {
        return;
      }
      if (other.ModHash != 0L) {
        ModHash = other.ModHash;
      }
      if (other.MinValue != 0F) {
        MinValue = other.MinValue;
      }
      if (other.MaxValue != 0F) {
        MaxValue = other.MaxValue;
      }
      if (other.EntityKind != 0) {
        EntityKind = other.EntityKind;
      }
      if (other.ModCategory != 0) {
        ModCategory = other.ModCategory;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModHash = input.ReadInt64();
            break;
          }
          case 21: {
            MinValue = input.ReadFloat();
            break;
          }
          case 29: {
            MaxValue = input.ReadFloat();
            break;
          }
          case 32: {
            EntityKind = input.ReadInt32();
            break;
          }
          case 40: {
            ModCategory = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ModHash = input.ReadInt64();
            break;
          }
          case 21: {
            MinValue = input.ReadFloat();
            break;
          }
          case 29: {
            MaxValue = input.ReadFloat();
            break;
          }
          case 32: {
            EntityKind = input.ReadInt32();
            break;
          }
          case 40: {
            ModCategory = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
