// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tradie.Analyzer;
using Tradie.Analyzer.Repos;

#nullable disable

namespace Tradie.Analyzer.Migrations
{
    [DbContext(typeof(AnalysisContext))]
    [Migration("20220806074829_PriceHistories")]
    partial class PriceHistories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tradie.Analyzer.Entities.AffixRange", b =>
                {
                    b.Property<decimal>("ModHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte>("ModCategory")
                        .HasColumnType("smallint");

                    b.Property<byte>("EntityKind")
                        .HasColumnType("smallint");

                    b.Property<float?>("MaxValue")
                        .HasColumnType("real");

                    b.Property<float?>("MinValue")
                        .HasColumnType("real");

                    b.HasKey("ModHash", "ModCategory", "EntityKind");

                    b.HasIndex("EntityKind");

                    b.HasIndex("ModCategory");

                    b.HasIndex("ModHash");

                    b.ToTable("AffixRanges");
                });

            modelBuilder.Entity("Tradie.Analyzer.Entities.ItemPriceHistory", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("text");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<byte>("Currency")
                        .HasColumnType("smallint");

                    b.Property<byte>("Kind")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("RecordedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RecordedTime");

                    b.ToTable("PriceHistory");
                });

            modelBuilder.Entity("Tradie.Analyzer.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string[]>("Subcategories")
                        .HasColumnType("text[]");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Subcategories");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Subcategories"), "GIN");

                    b.HasIndex(new[] { "Category" }, "idx_itemtype_category");

                    b.HasIndex(new[] { "Name" }, "idx_itemtype_name")
                        .IsUnique();

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Tradie.Analyzer.Entities.LoggedItem", b =>
                {
                    b.Property<long>("IdHash")
                        .HasColumnType("bigint");

                    b.Property<AnalyzedPropertyCollection>("Properties")
                        .HasColumnType("jsonb");

                    b.Property<string>("RawId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StashTabId")
                        .HasColumnType("bigint");

                    b.HasKey("IdHash");

                    b.HasIndex("IdHash")
                        .IsUnique();

                    b.HasIndex("Properties")
                        .HasAnnotation("Npgsql:CreatedConcurrently", true);

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Properties"), "GIN");

                    b.HasIndex("RawId");

                    b.HasIndex("StashTabId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Tradie.Analyzer.Entities.LoggedStashTab", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Kind")
                        .HasColumnType("text");

                    b.Property<string>("LastCharacterName")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("League")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<byte[]>("PackedItems")
                        .HasColumnType("bytea");

                    b.Property<string>("RawId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Created" }, "idx_stash_Created");

                    b.HasIndex(new[] { "LastModified" }, "idx_stash_LastModified");

                    b.HasIndex(new[] { "League" }, "idx_stash_League");

                    b.HasIndex(new[] { "RawId" }, "idx_stash_RawId")
                        .IsUnique();

                    b.ToTable("StashTabs");
                });

            modelBuilder.Entity("Tradie.Analyzer.Entities.Modifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.Property<decimal>("ModHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ModifierText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ModHash" }, "idx_modifier_modhash")
                        .IsUnique();

                    b.HasIndex(new[] { "ModifierText" }, "idx_modifier_modtext");

                    b.ToTable("Modifiers");

                    b.HasData(
                        new
                        {
                            Id = 1433901088,
                            Kind = 1,
                            ModHash = 17133152806627075035m,
                            ModifierText = "+# Total Maximum Life"
                        },
                        new
                        {
                            Id = 1708230221,
                            Kind = 1,
                            ModHash = 38565874988879569m,
                            ModifierText = "+# Total Resistances"
                        },
                        new
                        {
                            Id = 1327995692,
                            Kind = 1,
                            ModHash = 13132978022138495920m,
                            ModifierText = "+# Total Elemental Resistances"
                        },
                        new
                        {
                            Id = 1890204000,
                            Kind = 1,
                            ModHash = 2780892169640653766m,
                            ModifierText = "+# Total Chaos Resistance"
                        });
                });

            modelBuilder.Entity("Tradie.Analyzer.Entities.ItemType", b =>
                {
                    b.OwnsOne("Tradie.Analyzer.Entities.Requirements", "Requirements", b1 =>
                        {
                            b1.Property<int>("ItemTypeId")
                                .HasColumnType("integer");

                            b1.Property<int>("Dex")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasDefaultValue(0)
                                .HasColumnName("DexRequirement");

                            b1.Property<int>("Int")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasDefaultValue(0)
                                .HasColumnName("IntRequirement");

                            b1.Property<int>("Level")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasDefaultValue(0)
                                .HasColumnName("LevelRequirement");

                            b1.Property<int>("Str")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasDefaultValue(0)
                                .HasColumnName("StrRequirement");

                            b1.HasKey("ItemTypeId");

                            b1.ToTable("ItemTypes");

                            b1.WithOwner()
                                .HasForeignKey("ItemTypeId");
                        });

                    b.Navigation("Requirements");
                });
#pragma warning restore 612, 618
        }
    }
}
